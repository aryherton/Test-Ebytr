version: '3.9'
services:
  # frontend:
  #   build: ./frontend
  #   platform: linux/x86_64
  #   container_name: web_frontend
  #   ports:
  #     - 3004:3004
  #   depends_on:
  #     backend:
  #       condition: service_healthy
  #   # Os `healthcheck` devem garantir que a aplicação
  #   # está operacional, antes de liberar o container
  #   healthcheck:
  #     test: ["CMD", "lsof", "-t", "-i:3000"]  # Caso utilize outra porta interna para o front, altere ela aqui também
  #     timeout: 10s
  #     retries: 5
  # backend:
  #   build: ./backend
  #   container_name: api_backend
  #   platform: linux/x86_64
  #   restart: 'always'
  #   ports:
  #     - 3005:3005
  #   # command: npm run dev
  #   volumes:
  #     - './backend/src:/app/src'
  #   depends_on:
  #     db:
  #       condition: service_healthy
  #   environment:
  #     - PORT=3005
  #     # Os dados abaixo se referem ao container `db`
  #     # Dica: Relembre aqui da comunicação interna entre containers
  #     - DB_USER='${MONGO_USER}'
  #     - DB_PASS='${MONGO_PASSWORD}'
  #     - DB_HOST='${MONGO_URI}'
  #     - DB_NAME=Ebytr
  #     - DB_PORT=27017
  #   healthcheck:
  #     test: ["CMD", "lsof", "-t", "-i:3005"] # Caso utilize outra porta interna para o back, altere ela aqui também
  #     timeout: 10s
  #     retries: 5
  db:
    image: mongo:5.0.6
    container_name: db_mongo
    platform: linux/x86_64
    ports:
      - 27017:27017
    volumes:
      - db_data_mongo:/data/mongo
    environment:
      - MONGO_USER='${MONGO_USER}'
      - MONGO_PASSWORD='${MONGO_PASSWORD}'
    restart: 'always'
    healthcheck:
      test: echo 'db.stats().ok' | mongo localhost:27017 --quiet
      interval: 5s
      timeout: 5s
      retries: 12

    cap_add:
      - SYS_NICE # Deve omitir alertas menores
  
volumes:
  db_data_mongo:
    
